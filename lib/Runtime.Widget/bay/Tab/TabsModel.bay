/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.Tab;

use Runtime.lib;
use Runtime.Web.BaseModel;
use Runtime.Widget.Tab.Tabs;


class TabsModel extends BaseModel
{
	string active = "";
	Vector<Map> items = [];
	bool render = true;
	string component = classof Tabs;
	
	
	/**
	 * Init widget params
	 */
	void initParams(Dict params)
	{
		parent(params);
		
		if (params == null) return;
		if (params.has("active")) this.active = params.get("active");
		if (params.has("items")) this.items = params.get("items");
		if (params.has("render")) this.render = params.get("render");
	}
	
	
	/**
	 * Returns true if active
	 */
	void isActive(string tab_key) => this.active == tab_key;
	
	
	/**
	 * Set active
	 */
	void setActive(string active)
	{
		this.active = active;
	}
	
	
	/**
	 * Can show
	 */
	bool canShow(string tab_key)
	{
		Map tab = this.items.findItem(lib::equalAttr("key", tab_key));
		if (tab == null) return false;
		if (tab.has("href") and tab.get("key") != tab_key) return false;
		return true;
	}
}
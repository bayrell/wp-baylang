/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.WidgetSettings.Settings;

use Runtime.BaseObject;
use Runtime.Web.RenderContainer;
use BayLang.Constructor.Frontend.Editor.Parameters.ParameterComponent;
use BayLang.Constructor.WidgetPage.ParameterFactory;
use BayLang.Constructor.WidgetPage.WidgetSettingsInterface;


class ImageSettings extends BaseObject implements WidgetSettingsInterface
{
	/**
	 * Returns widget name
	 */
	string getWidgetName() => "Image";
	
	
	/**
	 * Returns alias name
	 */
	string getAliasName() => "Image";
	
	
	/**
	 * Returns component name
	 */
	string getComponentName() => "Runtime.Widget.Image";
	
	
	/**
	 * Returns model name
	 */
	string getModelName() => "";
	
	
	/**
	 * Returns selector name
	 */
	string getSelectorName() => "image";
	
	
	/**
	 * Returns group name
	 */
	string getGroupName() => "basic";
	
	
	/**
	 * Returns true if model
	 */
	bool isModel() => false;
	
	
	/**
	 * Returns true if is widget settings
	 */
	bool checkWidget(var widget)
	{
		if (not widget.isComponent()) return false;
		if (widget.component_class_name != this.getComponentName()) return false;
		return true;
	}
	
	
	/**
	 * Can insert widget
	 */
	bool canInsert(WidgetSettingsInterface widget)
	{
		return false;
	}
	
	
	/**
	 * Returns params
	 */
	Collection<ParameterFactory> getParams() =>
	[
		new ParameterFactory
		(
			classof ParameterComponent,
			{
				"name": "src",
				"label": "Image",
				"component": "BayLang.Constructor.Frontend.Components.SelectImageButton",
			}
		)
	];
	
	
	/**
	 * Returns default template
	 */
	Dict<fn> getDefaultTemplate() =>
	{
	};
}
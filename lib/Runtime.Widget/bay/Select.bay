<!--
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class name="Runtime.Widget.Select">

<use name="Runtime.Web.Messages.ValueChangeMessage" />


<style>
.widget_select, .widget_select:focus{
	width: 100%;
	font-family: var(--widget-font-family);
	font-size: var(--widget-font-size);
	padding: var(--widget-input-padding-y) var(--widget-input-padding-x);
	background-color: var(--widget-color-default);
	border-width: var(--widget-border-width);
	border-color: var(--widget-color-border);
	border-style: solid;
	border-radius: 4px;
	box-shadow: none;
	outline: transparent;
	line-height: normal;
	color: inherit;
	max-width: 100%;
	min-height: 32px;
}
.widget_select:hover{
	color: inherit;
}
</style>


<template name="render">
	
	<select name={{ this.name }} class="widget_select" @event:change={{ this.onChange }}>
	
	%set string value = this.getValue();
	%set Vector options = this.getOptions();
	%set Dict selected = {};
	%if (this.show_select_value === true or this.show_select_value == "true")
	{
		%if (value === "" or value === null)
		{
			%set selected = { "selected": "selected" };
		}
		<option @key=":select_value" value={{ "" }} ...selected>Select value</option>
	}
	
	%if (options != null)
	{
		%for (int i=0; i<options.count(); i++)
		{
			%set Dict item = options.get(i);
			%set selected = {};
			%if (item.get("key") == value and value !== "" and value !== null)
			{
				%set selected = { "selected": "selected" };
			}
			<option @key={ item.get("key") } value={ "" ~ item.get("key") } ...selected>
				{{ item.get("value") }}
			</option>
		}
	}
	
	</select>
	
</template>


<script type="frontend">

props string name = "";
props string value = "";
props string default = "";
props Vector options = null;
props var show_select_value = true;


/**
 * Returns value
 */
string getValue()
{
	if (this.value !== "" and this.value !== null) return this.value;
	return this.default;
}


/**
 * Returns options
 */
Vector getOptions()
{
	if (this.model == null) return this.options;
	return this.model.getOptions();
}


/**
 * Change event
 */
void onChange(var e)
{
	/* Send value change */
	this.emit("valueChange", new ValueChangeMessage{
		"value": e.target.value,
		"old_value": this.value,
		"data": this.data,
	});
}

</script>

</class>
/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.Form;

use Runtime.BaseObject;
use Runtime.Serializer;
use Runtime.Web.ApiResult;
use Runtime.Widget.Form.FormModel;
use Runtime.Widget.Form.FormStorageInterface;


class FormSaveProxyStorage extends BaseObject implements FormStorageInterface
{
	var container;
	Collection<string> path;
	FormModel form = null;
	
	
	/**
	 * Set form
	 */
	void setForm(FormModel form)
	{
		this.form = form;
	}
	
	
	/**
	 * Constructor
	 */
	void constructor(Dict params = null)
	{
		parent();
		this._assign_values(params);
	}
	
	
	/**
	 * Returns items
	 */
	Vector getItems()
	{
		return rtl::attr(this.container, this.path);
	}
	
	
	/**
	 * Load form
	 */
	async ApiResult load()
	{
	}
	
	
	/**
	 * Submit form
	 */
	async ApiResult submit()
	{
		/* Get post data */
		Dict post_data =
		{
			"item": this.form.getPostItem(),
		};
		Dict post_data = this.form.mergePostData(post_data, "load");
		
		/* Copy item */
		Dict item = post_data.get("item");
		item = Serializer::copy(item);
		
		/* Save item */
		Collection<Dict> items = this.getItems();
		if (this.form.row_number == -1) items.push(item);
		else items.set(this.form.row_number, item);
		
		/* Success result */
		ApiResult res = new ApiResult;
		res.success();
		return res;
	}
}
/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.ContextMenu;

use Runtime.Web.BaseModel;
use Runtime.Widget.ContextMenu.ContextMenu;
use Runtime.Widget.ContextMenu.ContextMenuMessage;


class ContextMenuModel extends BaseModel
{
	string component = classof ContextMenu;
	string widget_name = "context_menu";
	bool is_open = false;
	string width = "";
	int x = 0, y = 0;
	Vector items = [];
	var data = null;
	
	
	/**
	 * Init widget params
	 */
	void initParams(Dict params)
	{
		parent(params);
		
		if (params == null) return;
		if (params.has("items")) this.items = params.get("items");
	}
	
	
	/**
	 * Set width
	 */
	void setWidth(string value)
	{
		this.width = value;
	}
	
	
	/**
	 * Show dialog
	 */
	void show(int x, int y)
	{
		this.is_open = true;
		this.x = x;
		this.y = y;
	}
	
	
	/**
	 * Hide dialog
	 */
	void hide()
	{
		this.is_open = false;
	}
	
	
	/**
	 * Add item
	 */
	void addItem(Dict item)
	{
		this.items.push(item);
	}
	
	
	/**
	 * Find index
	 */
	int find(string key) =>
		this.items.find(
			bool (Dict item) use (key) => item.get("key") == key
		)
	;
	
	
	/**
	 * Find item
	 */
	Dict findItem(string key) => this.items.get( this.find(key) );
	
	
	/**
	 * On click
	 */
	void onClickItem(Dict item)
	{
		this.emit(new ContextMenuMessage{
			"name": "clickItem",
			"item": item,
		});
	}
}

/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Widget.Table;

use Runtime.BaseObject;
use Runtime.Web.ApiResult;
use Runtime.Widget.Table.TableModel;
use Runtime.Widget.Table.TableStorageInterface;


class TableStorage extends BaseObject implements TableStorageInterface
{
	string api_name = "";
	TableModel table = null;
	
	
	/**
	 * Returns api name
	 */
	string getApiName() => this.api_name;
	
	
	/**
	 * Set table
	 */
	void setTable(TableModel table)
	{
		this.table = table;
	}
	
	
	/**
	 * Constructor
	 */
	void constructor(Dict params = null)
	{
		parent();
		this._assign_values(params);
	}
	
	
	/**
	 * Load form
	 */
	async ApiResult load()
	{
		Dict post_data =
		{
			"page": this.table.page,
			"limit": this.table.limit,
		};
		post_data = this.table.mergePostData(post_data, "load");
		ApiResult res = await this.table.layout.callApi({
			"api_name": this.getApiName(),
			"method_name": "actionSearch",
			"data": post_data
		});
		return res;
	}
}
/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Web.Hooks;

use Runtime.Callback;
use Runtime.Entity.Hook;
use Runtime.Web.BaseModel;
use Runtime.Web.RenderContainer;
use Runtime.Web.Hooks.AppHook as BaseAppHook;


class WidgetModelFactory extends BaseAppHook
{
	string model_name = "";
	
	
	/**
	 * Create hook
	 */
	static Hook hook(string model_name)
	{
		return new Hook(static::getClassName(), {"model_name": model_name});
	}
	
	
	/**
	 * Setup
	 */
	void setup(Dict params)
	{
		parent(params);
		
		if (params == null) return;
		if (params.has("model_name")) this.model_name = params.get("model_name");
	}
	
	
	/**
	 * Register hooks
	 */
	void register_hooks()
	{
		#ifdef BACKEND then
		this.register(static::ROUTE_BEFORE);
		#endif
	}
	
	
	/**
	 * Route before
	 */
	void route_before(Map params)
	{
		RenderContainer container = params.get("container");
		if (container.response != null) return;
		
		/* Add widget */
		container.layout.addWidget(this.model_name)
	}
}
/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Web.Hooks;

use Runtime.Web.BaseLayoutModel;
use Runtime.Web.RenderContainer;
use Runtime.Web.Hooks.SeoModel;
use Runtime.Web.Hooks.AppHook as BaseAppHook;


class CanonicalUrl extends BaseAppHook
{
	Dict query = null;
	
	
	/**
	 * Setup
	 */
	void setup(Dict params)
	{
		parent(params);
		
		if (params == null) return;
		if (params.has("query")) this.query = params.get("query");
	}
	
	
    /**
	 * Register hooks
	 */
	void register_hooks()
	{
		this.register(static::ROUTE_BEFORE);
	}
    
	
	/**
	 * Route before
	 */
	void route_before(Map params)
	{
		RenderContainer container = params.get("container");
		BaseLayoutModel layout = container.layout;
		SeoModel seo = layout.getWidget("seo");
		if (not seo) return;
		if (not layout.route) return;
		if (layout.route.uri == null) return;
		
		/* Build canonical url */
		string canonical_url = layout.url(
			layout.route.name, layout.route.matches, {"domain": false}
		);
		
		/* Add get parameters */
		Collection<string> keys = layout.request_query.keys().sort();
		for (int i=0; i<keys.count(); i++)
		{
			string key = keys.get(i);
			if (not this.query.has(key)) continue;
			if (this.query.get(key).indexOf(layout.route.name) == -1) continue;
			
			string value = layout.request_query.get(key);
			canonical_url = rs::url_get_add(
				canonical_url,
				key,
				value
			);
		}
		
		/* Set canonical url */
		seo.setCanonicalUrl(canonical_url);
	}
}
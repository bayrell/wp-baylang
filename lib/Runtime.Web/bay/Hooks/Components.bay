/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Web.Hooks;

use Runtime.Entity.Hook;
use Runtime.Web.Hooks.AppHook as BaseAppHook;


class Components extends BaseAppHook
{
	Collection items = {
		"components": [],
		"footer": [],
		"header": [],
	};
	
	
	/**
	 * Hook factory
	 */
	static Hook hook(Collection items)
	{
		return new Hook(static::getClassName(), {"components": items});
	}
	
	
	/**
	 * Hook factory
	 */
	static Hook header(Collection items)
	{
		return new Hook(static::getClassName(), {"header": items});
	}
	
	
	/**
	 * Hook factory
	 */
	static Hook footer(Collection items)
	{
		return new Hook(static::getClassName(), {"footer": items});
	}
	
	
	/**
	 * Setup
	 */
	void setup(Dict params)
	{
		parent(params);
		if (params == null) return;
		if (params.has("components")) this.items.set("components", params.get("components"));
		if (params.has("footer")) this.items.set("footer", params.get("footer"));
		if (params.has("header")) this.items.set("header", params.get("header"));
	}
	
	
	/**
	 * Register hooks
	 */
	void register_hooks()
	{
		this.register(static::COMPONENTS);
		#ifdef BACKEND then
		this.register(static::RENDER_HEAD);
		this.register(static::RENDER_FOOTER);
		#endif
	}
	
	
	/**
	 * Components
	 */
	void components(Map params)
	{
		params.get("components").appendItems(this.items.get("components"));
	}
	
	
	/**
	 * Render head
	 */
	void render_head(Map params)
	{
		params.get("components").appendItems(this.items.get("header"));
	}
	
	
	/**
	 * Render footer
	 */
	void render_footer(Map params)
	{
		params.get("components").appendItems(this.items.get("footer"));
	}
}
/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Unit.Commands;

use Runtime.io;
use Runtime.Console.BaseCommand;
use Runtime.Unit.TestProvider;
use Runtime.UnitAnnotations.UnitTest;


class TestRun extends BaseCommand
{
	/**
	 * Returns name
	 */
	static string getName() => "test::run";
	
	
	/**
	 * Returns description
	 */
	static string getDescription() => "Run test";
	
	
	/**
	 * Run task
	 */
	async static int run()
	{
		string test_name = @.cli_args[2];
		int error_code = static::SUCCESS;
		
		if (test_name == null)
		{
			/* List all tests */
			io::print("List of all tests:");
			TestProvider tests = @.provider(classof TestProvider);
			
			for (int i=0; i<tests.count(); i++)
			{
				UnitTest test = tests.get(i);
				io::print( (i + 1) ~ ") " ~ io::color("yellow", test.name) );
			}
		}
		else
		{
			/* Run current test */
			TestProvider tests = @.provider(classof TestProvider);
			error_code = await tests.runTestByName(test_name);
			
			if (error_code == 1)
			{
				io::print( io::color("green", "OK") );
			}
			else
			{
				io::print( io::color("red", "Fail") );
			}
		}
		
		return error_code;
	}
}
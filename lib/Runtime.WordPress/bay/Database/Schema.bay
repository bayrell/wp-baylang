/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.WordPress.Database;

use Runtime.re;
use Runtime.BaseStruct;
use Runtime.DateTime;
use Runtime.ORM.DatabaseSchema;
use Runtime.ORM.Relation;
use Runtime.ORM.Annotations.AutoIncrement;
use Runtime.ORM.Annotations.BigIntType;
use Runtime.ORM.Annotations.BooleanType;
use Runtime.ORM.Annotations.CollectionType;
use Runtime.ORM.Annotations.DateTimeType;
use Runtime.ORM.Annotations.DictType;
use Runtime.ORM.Annotations.ForeignKey;
use Runtime.ORM.Annotations.Index;
use Runtime.ORM.Annotations.JsonType;
use Runtime.ORM.Annotations.Primary;
use Runtime.ORM.Annotations.StringType;
use Runtime.ORM.Annotations.Table;
use Runtime.ORM.Annotations.TinyIntType;
use Runtime.ORM.Annotations.Unique;


class Schema extends DatabaseSchema
{
	/**
	 * Forms settings
	 */
	@Table{ "name": "forms" }
	pure memorize Collection<BaseStruct> forms() =>
	[
		/* Fields */
		new BigIntType{"name": "id"},
		new StringType{"name": "name"},
		new StringType{"name": "api_name"},
		new StringType{"name": "settings"},
		new StringType{"name": "email_to"},
		new BooleanType{"name": "is_deleted"},
		
		/* Index */
		new AutoIncrement{"name": "id"},
		new Primary{"keys": ["id"]},
	];
	
	
	/**
	 * Forms data
	 */
	@Table{ "name": "forms_data" }
	pure memorize Collection<BaseStruct> forms_data() =>
	[
		/* Fields */
		new BigIntType{"name": "id"},
		new BigIntType{"name": "form_id"},
		new StringType{"name": "form_title"},
		new StringType{"name": "form_position"},
		new JsonType{"name": "data"},
		new StringType{"name": "utm"},
		new StringType{"name": "send_email_uuid"},
		new TinyIntType{"name": "send_email_code"},
		new StringType{"name": "send_email_error"},
		new BooleanType{"name": "spam"},
		new DateTimeType{"name": "gmtime_add"},
		
		/* Index */
		new AutoIncrement{"name": "id"},
		new Primary{"keys": ["id"]},
	];
	
	
	/**
	 * Forms ip
	 */
	@Table{ "name": "forms_ip" }
	pure memorize Collection<BaseStruct> forms_ip() =>
	[
		/* Fields */
		new StringType{"name": "ip"},
		new BigIntType{"name": "count"},
		new BigIntType{"name": "last"},
		
		/* Index */
		new Primary{"keys": ["ip"]},
	];
	
	
	/**
	 * Mail settings
	 */
	@Table{ "name": "mail_settings" }
	pure memorize Collection<BaseStruct> mail_settings() =>
	[
		/* Fields */
		new BigIntType{"name": "id"},
		new TinyIntType{"name": "enable"},
		new StringType{"name": "plan"},
		new StringType{"name": "host"},
		new StringType{"name": "port"},
		new StringType{"name": "login"},
		new StringType{"name": "password"},
		new TinyIntType{"name": "ssl_enable"},
		new BooleanType{"name": "is_deleted"},
		
		/* Index */
		new AutoIncrement{"name": "id"},
		new Primary{"keys": ["id"]},
	];
	
	
	/**
	 * Mail log
	 */
	@Table{ "name": "mail_delivery" }
	pure memorize Collection<BaseStruct> mail_delivery() =>
	[
		/* Fields */
		new BigIntType{"name": "id"},
		new StringType{"name": "worker"},
		new StringType{"name": "plan"},
		new TinyIntType{"name": "status"},
		new StringType{"name": "dest"},
		new StringType{"name": "uuid"},
		new StringType{"name": "title"},
		new StringType{"name": "message"},
		new DateTimeType{"name": "gmtime_plan"},
		new DateTimeType{"name": "gmtime_send"},
		new StringType{"name": "send_email_error"},
		new BigIntType{"name": "send_email_code"},
		new DateTimeType{"name": "gmtime_add"},
		new BooleanType{"name": "is_delete"},
		
		/* Index */
		new AutoIncrement{"name": "id"},
		new Primary{"keys": ["id"]},
		new Unique{"keys": ["uuid"]},
	];
}
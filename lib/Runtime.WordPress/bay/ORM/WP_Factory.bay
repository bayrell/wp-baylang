/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.WordPress.ORM;

use Runtime.BaseObject;
use Runtime.BaseProvider;
use Runtime.Entity.Entity;
use Runtime.ORM.Provider;
use Runtime.ORM.Factory.ConnectionFactory;


struct WP_Factory extends ConnectionFactory
{
	/**
	 * Constructor
	 */
	void constructor()
	{
		parent();
	}
	
	
	/**
	 * Register connections
	 */
	void registerConnections(Provider provider)
	{
		#ifcode PHP then
		
		global $wpdb;
		
		/* Add default connection */
		$conn = new \Runtime\WordPress\ORM\WP_Connection("prefix");
		$conn->prefix = $wpdb->prefix;
		$provider->addConnection($conn);
		
		/* Add base connection */
		$conn = new \Runtime\WordPress\ORM\WP_Connection("default");
		$conn->prefix = $wpdb->base_prefix;
		$provider->addConnection($conn);
		
		/* Add no prefix connection */
		$conn = new \Runtime\WordPress\ORM\WP_Connection("no_prefix");
		$provider->addConnection($conn);
		
		#endif
	}
}
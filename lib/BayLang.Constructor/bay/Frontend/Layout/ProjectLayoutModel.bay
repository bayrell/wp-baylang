/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace BayLang.Constructor.Frontend.Layout;

use Runtime.Serializer;
use Runtime.Web.BaseLayoutModel;
use Runtime.Web.RenderContainer;
use BayLang.Constructor.Frontend.Layout.ProjectLayout;


class ProjectLayoutModel extends BaseLayoutModel
{
	string component = classof ProjectLayout;
	string page_title = "";
    string project_id = "";
	string module_id = "";
    
    
    /**
	 * Load data
	 */
	async void loadData(RenderContainer container)
	{
		parent(container);
		this.project_id = this.layout.route.matches.get("project_id");
		this.module_id = this.layout.route.matches.get("module_id");
	}
	
	
	/**
	 * Process frontend data
	 */
	void serialize(Serializer serializer, Map data)
	{
		serializer.process(this, "module_id", data);
		serializer.process(this, "page_title", data);
		serializer.process(this, "project_id", data);
		parent(serializer, data);
	}
}
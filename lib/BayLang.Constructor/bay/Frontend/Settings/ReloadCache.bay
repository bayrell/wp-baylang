<!--
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class name="BayLang.Constructor.Frontend.Settings.ReloadCache">

<use name="Runtime.Web.ApiResult" />
<use name="Runtime.Widget.Button" component="true" />
<use name="Runtime.Widget.WidgetResult" />
<use name="Runtime.Widget.WidgetResultModel" />
<use name="Runtime.Widget.Form.FormModel" />


<style>
.reload_cache{
	display: flex;
	align-items: center;
	gap: 5px;
}
.reload_cache %(WidgetResult)widget_result{
	margin-top: 0;
}
</style>


<template>
	<div class="reload_cache">
		<Button @event:onClick={{ this.onRefresh }}>Reload</Button>
		<WidgetResult @model={{ this.result }} />
	</div>
</template>


<script>

WidgetResultModel result = new WidgetResultModel;


/**
 * Refresh item
 */
async void onRefresh()
{
	this.result.clear();
	this.result.setWaitMessage();
	
	/* Get primary key */
	FormModel form = this.data.get("form");
	Dict pk = form.getPrimaryKey(form.item);
	
	/* Reload cache */
	ApiResult res = await this.layout.callApi({
		"api_name": "baylang.constructor.project::save",
		"method_name": "reloadCache",
		"data": {
			"pk": pk
		}
	});
	this.result.setApiResult(res);
}

</script>

</class>
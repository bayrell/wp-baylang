<!--
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class name="BayLang.Constructor.Frontend.Editor.Breadcrumbs">

<use name="BayLang.Constructor.Frontend.Editor.WidgetTreeItem" />


<style>
.breadcrumbs{
	display: flex;
	border-bottom: 1px var(--widget-color-border) solid;
	height: 32px;
	padding-left: 5px;
	overflow-x: auto;
	scrollbar-width: none;
}
.breadcrumbs__item{
}
.breadcrumbs__item_name{
}
.breadcrumbs__item_row{
	display: flex;
}
.breadcrumbs__item_name, .breadcrumbs__item_arrow,
.breadcrumbs__item--next, .breadcrumbs__item_menu_name{
	display: flex;
	align-items: center;
	justify-content: center;
	min-height: 31px;
}
.breadcrumbs__item_name{
	cursor: pointer;
	padding-left: 5px;
}
.breadcrumbs__item_name span{
	flex: 1;
}
.breadcrumbs__item_arrow{
	cursor: pointer;
	width: 20px;
}
.breadcrumbs__item_menu{
	display: none;
	position: absolute;
	background-color: white;
	border: 1px var(--widget-color-border) solid;
}
.breadcrumbs__item_menu--open{
	display: block;
}
.breadcrumbs__item_menu_name{
	justify-content: flex-start;
	padding-left: 5px;
	padding-right: 5px;
	border-bottom: 1px var(--widget-color-border) solid;
	cursor: pointer;
}
.breadcrumbs__item_menu_name:hover{
	background-color: var(--widget-color-hover);
}
.breadcrumbs__item_menu_name:last-child{
	border-bottom-width: 0px;
}
.breadcrumbs__item--next{
	text-wrap: nowrap;
	padding: 0px 5px;
	width: 20px;
}
</style>


<template name="renderRow" args="WidgetTreeItem item, int pos, bool is_menu">
	%set Collection<int> selected_path = this.model.selected.path;
	<div class="breadcrumbs__item_row">
		<span class="breadcrumbs__item_name"
			@event:click={{
				void () use (selected_path, pos, is_menu)
				{
					if (is_menu)
					{
						this.model.selectBreadcrumbs(pos);
					}
					else
					{
						this.model.breadcrumbs_selected = -1;
						this.model.selectItem(
							selected_path.slice(0, pos + 1)
						);
					}
					this.model.context_menu.hide();
				}
			}}
			@event:contextmenu={{
				void (var e) use (selected_path, pos, is_menu)
				{
					e.preventDefault();
					
					/* Select item */
					this.model.breadcrumbs_selected = -1;
					this.model.selectItem(
						selected_path.slice(0, pos + 1)
					);
					
					/* Show context menu */
					int x = e.clientX;
					int y = e.clientY;
					this.model.context_menu.show(x, y);
					
					return false;
				}
			}}
		>{{ (item != null) ? item.label : "Select value" }}</span>
		%if (is_menu)
		{
			<div class="breadcrumbs__item_arrow"
				@event:click={{
					void () use (pos) {
						this.model.selectBreadcrumbs(pos);
					}
				}}
			>@raw{{ "&#9661;" }}</div>
		}
	</div>
</template>


<template name="renderMenu" args="WidgetTreeItem parent_item, int pos, bool is_last">
	%set Collection<int> selected_path = this.model.selected.path;
	<div class="breadcrumbs__item_menu"
		class={{ this.model.breadcrumbs_selected == pos
			? "breadcrumbs__item_menu--open"
			: ""
		}}
	>
		%if (parent_item and parent_item.items)
		{
			%for (int j=0; j<parent_item.items.count(); j++)
			{
				%set WidgetTreeItem menu_item = parent_item.items.get([j]);
				<div class="breadcrumbs__item_menu_name"
					@event:click={{
						void () use (selected_path, pos, j)
						{
							this.model.selectItem(
								selected_path.slice(0, pos).pushIm(j)
							);
							this.model.context_menu.hide();
						}
					}}
				>
					{{ menu_item.label }}
				</div>
			}
		}
		%if (is_last)
		{
			<div class="breadcrumbs__item_menu_name"
				@event:click={{
					void () use (selected_path, pos) {
						this.model.breadcrumbs_selected = -1;
						this.model.add_item_dialog.show(selected_path.slice(0, pos));
					}
				}}
			>
				+ Add Widget
			</div>
		}
	</div>
</template>


<template>
	<div class="breadcrumbs">
		%set WidgetTreeItem item = this.model.tree.root;
		%set Collection<int> selected_path = this.model.selected.path;
		%if (selected_path)
		{
			%for (int i=0; i<selected_path.count(); i++)
			{
				%if (item != null)
				{
					%set WidgetTreeItem parent_item = item;
					%set item = item.get([selected_path.get(i)]);
					<div class="breadcrumbs__item breadcrumbs__item--value">
						
						<!-- Render row -->
						%if (i < selected_path.count() - 1)
						{
							%render this.renderRow(item, i, false);
						}
						%else
						{
							%render this.renderRow(item, i, true);
							%render this.renderMenu(parent_item, i, false);
						}
						
					</div>
					<div class="breadcrumbs__item breadcrumbs__item--next">
						@raw{{ "->" }}
					</div>
				}
			}
			
			<div class="breadcrumbs__item breadcrumbs__item--last">
				
				<!-- Render row -->
				%render this.renderRow(null, selected_path.count(), true);
				%render this.renderMenu(item, selected_path.count(), true);
				
			</div>
		}
	</div>
</template>


</class>
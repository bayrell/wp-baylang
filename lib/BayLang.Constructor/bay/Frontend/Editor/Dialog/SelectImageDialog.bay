<!--
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
-->

<class name="BayLang.Constructor.Frontend.Editor.Dialog.SelectImageDialog"
	extends="Runtime.Widget.Dialog.Dialog"
>


<style>
.select_image_items{
	position: relative;
	display: flex;
	flex-wrap: wrap;
	.item{
		margin: 5px;
		text-align: center;
		cursor: pointer;
	}
	.item_image_wrap{
		display: flex;
		position: relative;
		align-items: center;
		justify-content: center;
		width: 100px;
		height: 100px;
		padding: 2px;
		border: 2px transparent solid;
	}
	.item_upload{
		input{
			display: none;
		}
		.item_image_wrap{
			border: 1px var(--widget-color-border) solid;
			border-radius: 4px;
		}
	}
	.item_image{
		max-width: 100%;
		max-height: 100%;
	}
	.item_label{
		margin-top: 5px;
		overflow-wrap: anywhere;
		width: 100px;
		text-align: center;
		span{
			display: inline-block;
			padding: 5px;
		}
	}
	.item.active{
		.item_image_wrap{
			border-color: var(--widget-color-primary);
			user-select: none;
		}
		.item_label span{
			background-color: var(--widget-color-primary);
			color: white;
		}
	}
}
</style>


<template name="renderUploadImage">
	<div class="item item_upload">
		<input type="file" @ref="upload_file" @event:change={{ this.onFileUploadChange }} />
		<div class="item_image_wrap" @event:click={{ this.onFileUploadClick }}>
			Upload image
		</div>
	</div>
</template>


<template name="renderContent">
	<div class="select_image_items" ref="items"
		@event:click={{
			void ()
			{
				this.model.context_menu.hide();
			}
		}}
	>
		%render this.renderWidget(this.model.context_menu);
		%render this.renderUploadImage();
		%for (int i=0; i<this.model.items.count(); i++)
		{
			%set Dict item = this.model.items.get(i);
			%if (this.isImage(item))
			{
				<div class="item"
					class={{ this.model.selected == i ? "active" : "" }}
					@event:click={{ void () use (i){ this.model.selectItem(i) } }}
					@event:contextmenu={{ void (var event) use (i){
						var rect = this.getRef("items").getBoundingClientRect();
						int x = event.clientX - rect.left;
						int y = event.clientY - rect.top;
						this.model.selectItem(i);
						this.model.contextMenu(x, y);
						event.preventDefault();
					} }}
				>
					<div class="item_image_wrap">
						<img class="item_image" src={{ item.get("url") }} />
					</div>
					<div class="item_label">
						<span>{{ item.get("file_name") }}</span>
					</div>
				</div>
			}
		}
	</div>
</template>


<script>


/**
 * File upload click event
 */
void onFileUploadClick()
{
	var upload_file = this.getRef("upload_file");
	upload_file.click();
}


/**
 * File upload change
 */
void onFileUploadChange()
{
	var upload_file = this.getRef("upload_file");
	var file = upload_file.files[0];
	if (file)
	{
		this.model.uploadFile(file);
	}
}


/**
 * Returns true if item is image
 */
bool isImage(Dict item)
{
	string file_name = item.get("file_name");
	string file_extension = rs::extname(file_name);
	Collection arr = ["jpg", "jpeg", "png", "svg"];
	if (arr.indexOf(file_extension) == -1) return false;
	return true;
}

</script>

</class>
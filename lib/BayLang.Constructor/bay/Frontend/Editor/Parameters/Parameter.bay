/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace BayLang.Constructor.Frontend.Editor.Parameters;

use Runtime.BaseObject;
use BayLang.Constructor.Frontend.Editor.Parameters.ParameterModel;
use BayLang.Constructor.Frontend.Editor.Processor.CodeProcessor;
use BayLang.Constructor.Frontend.Editor.Widget;
use BayLang.OpCodes.BaseOpCode;
use BayLang.OpCodes.OpHtmlAttribute;


class Parameter extends BaseObject
{
	string name = "";
	string label = "";
	string component = "";
	string tab = "params";
	bool display = true;
	var value = null;
	var default = null;
	Dict props = null;
	BaseOpCode op_code = null;
	Widget widget = null;
	
	
	/**
	 * Constructor
	 */
	public void constructor(Dict params = null)
	{
		parent();
		this._assign_values(params);
	}
	
	
	/**
	 * Init parameter
	 */
	public void init()
	{
		if (this.default == null) return;
		if (this.value != null) return;
		this.setValue(this.default);
	}
	
	
	/**
	 * Is op_code
	 */
	void isOpCode(BaseOpCode op_code)
	{
		return false;
	}
	
	
	/**
	 * Set op_code
	 */
	void setOpCode(BaseOpCode op_code)
	{
		this.op_code = op_code;
	}
	
	
	/**
	 * Set value
	 */
	void setValue(var value)
	{
		this.value = value;
	}
	
	
	/**
	 * Change param
	 */
	void changeValue(var value)
	{
		this.setValue(value);
	}
}
/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace BayLang.Constructor.Frontend.Route;

use Runtime.Widget.ButtonModel;
use Runtime.Widget.Label;
use Runtime.Widget.Crud.CrudApiStorage;
use Runtime.Widget.Table.TableDialogModel;
use BayLang.Constructor.Frontend.Route.RouteFormModel;


class RouteTableModel extends TableDialogModel
{
	/**
	 * Create data storage
	 */
	CrudApiStorage createDataStorage() => new CrudApiStorage{
		"layout": this.layout,
		"class_name": "admin.constructor.route",
		"primary_keys": ["id"],
	};
	
	
	/**
	 * Create form
	 */
	RouteFormModel createForm() => this.addWidget(classof RouteFormModel);
	
	
	/**
	 * Init widget settings
	 */
	void initWidget(Dict params)
	{
		parent(params);
		
		/* Row number */
		this.addField({
			"name": "row_number",
		});
		
		/* Field name */
		this.addField({
			"name": "name",
			"label": "Name",
			"component": classof Label,
		});
		
		/* Field url */
		this.addField({
			"name": "url",
			"label": "URL",
			"component": classof Label,
		});
		
		/* Field url */
		this.addField({
			"name": "model",
			"label": "Model",
			"component": classof Label,
		});
		
		/* Field row buttons */
		this.addField({
			"name": "row_buttons",
			"model": this.row_buttons,
		});
		
		/* Open button */
		ButtonModel open_button = this.row_buttons.addWidget(
			classof ButtonModel,
			{
				"widget_name": "open_button",
				"content": "Open",
				"href": string (Dict data)
				{
					int row_number = data.get("row_number");
					Dict item = this.getItemByRowNumber(row_number);
					string url = this.layout.url(
						"baylang:project:open",
						{
							"project_id": this.storage.foreign_value,
						}
					);
					return url ~ item.get("url");
				}
			},
			"edit_button",
			"before"
		);
		this.row_buttons.removeItemByName("edit_button");
		this.row_buttons.removeItemByName("delete_button");
		
		/* Add style */
		this.styles.add("border");
		this.row_buttons.styles.add("no-gap");
	}
}
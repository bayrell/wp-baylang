/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.XML.Test;

use Runtime.io;
use Runtime.Unit.AssertHelper;
use Runtime.Unit.Test;
use Runtime.XML.XML;
use Runtime.XML.YamlConverter;


class YamlTest
{
	/**
	 * Check if yaml is correct
	 */
	static void assertYaml(XML xml, Dict d1, Dict variables = null, bool log_yaml = true)
	{
		YamlConverter converter = new YamlConverter(xml, variables);
		Dict d2 = converter.toDict();
		try
		{
			AssertHelper::equalDict(d1, d2, "Yaml");
		}
		catch (var e)
		{
			if (log_yaml)
			{
				io::print(
					converter.convert()
				);
			}
			throw e;
		}
	}
	
	
	@Test{}
	static void test1()
	{
		XML xml = XML::loadXml(
			'<?xml version="1.0" encoding="UTF-8" ?>
			<root>
				<item1>1</item1>
				<item2>2</item2>
				<item3>3</item3>
			</root>'
		);
		
		Dict result = {
			"item1": "1",
			"item2": "2",
			"item3": "3",
		};
		
		YamlTest::assertYaml(xml, result);
	}
	
	
	@Test{}
	static void test2()
	{
		XML xml = XML::loadXml(
			'<?xml version="1.0" encoding="UTF-8" ?>
			<root>
				<item>1</item>
				<item>2</item>
				<item>3</item>
				<item>4</item>
			</root>'
		);
		
		Dict result = {
			"item": [
				"1",
				"2",
				"3",
				"4",
			],
		};
		
		YamlTest::assertYaml(xml, result);
	}
	
	
	@Test{}
	static void testEmptyItem()
	{
		XML xml = XML::loadXml(
			'<?xml version="1.0" encoding="UTF-8" ?>
			<root>
				<item></item>
			</root>'
		);
		
		Dict result = {
			"item": "",
		};
		
		YamlTest::assertYaml(xml, result);
	}
	
	
	@Test{}
	static void testInteger()
	{
		XML xml = XML::loadXml(
			'<?xml version="1.0" encoding="UTF-8" ?>
			<root>
				<item type="int">1</item>
			</root>'
		);
		
		Dict result = {
			"item": 1,
		};
		
		YamlTest::assertYaml(xml, result);
	}
	
	
	@Test{}
	static void testBoolean()
	{
		XML xml = XML::loadXml(
			'<?xml version="1.0" encoding="UTF-8" ?>
			<root>
				<item type="boolean">1</item>
			</root>'
		);
		
		Dict result = {
			"item": true,
		};
		
		YamlTest::assertYaml(xml, result);
	}
	
	
	@Test{}
	static void testArray()
	{
		XML xml = XML::loadXml(
			'<?xml version="1.0" encoding="UTF-8" ?>
			<root>
				<volumes array="true">/home/ubuntu:/home/ubuntu</volumes>
			</root>'
		);
		
		Dict result = {
			"volumes": [
				"/home/ubuntu:/home/ubuntu"
			],
		};
		
		YamlTest::assertYaml(xml, result);
	}
	
	
	@Test{}
	static void testMap()
	{
		XML xml = XML::loadXml(
			'<?xml version="1.0" encoding="UTF-8" ?>
			<root>
				<volumes type="map"></volumes>
			</root>'
		);
		
		Dict result = {
			"volumes": {
			},
		};
		
		YamlTest::assertYaml(xml, result);
	}
	
	
	@Test{}
	static void testData1()
	{
		XML xml = XML::loadXml(
			'<?xml version="1.0" encoding="UTF-8" ?>
			<root>
				<image>test_image</image>
				<volumes array="true">database_data:/data</volumes>
			</root>'
		);
		
		Dict result = {
			"image": "test_image",
			"volumes": [
				"database_data:/data",
			],
		};
		
		YamlTest::assertYaml(xml, result);
	}
	
	
	@Test{}
	static void testData2()
	{
		XML xml = XML::loadXml(
			'<?xml version="1.0" encoding="UTF-8" ?>
			<root>
				<yaml>
					<services>
						<database>
							<image>test_image</image>
							<volumes array="true">database_data:/data</volumes>
						</database>
					</services>
					<volumes>
						<database_data type="map" />
					</volumes>
				</yaml>
			</root>'
		);
		
		Dict result = {
			"yaml": {
				"services": {
					"database": {
						"image": "test_image",
						"volumes": [
							"database_data:/data",
						],
					}
				},
				"volumes": {
					"database_data": {}
				},
			},
		};
		
		YamlTest::assertYaml(xml, result);
	}
	
	
	@Test{}
	static void testVariables()
	{
		XML xml = XML::loadXml(
			'<?xml version="1.0" encoding="UTF-8" ?>
			<root>
				<yaml>
					<services>
						<_var_app_name_>
							<image>_var_image_</image>
							<volumes array="true">_var_app_name__data:/data</volumes>
						</_var_app_name_>
					</services>
					<volumes type="map">
						<_var_app_name__data type="map" />
					</volumes>
				</yaml>
			</root>'
		);
		
		Dict variables = {
			"_var_app_name_": "database",
			"_var_image_": "test_image",
		};
		
		Dict result = {
			"yaml": {
				"services": {
					"database": {
						"image": "test_image",
						"volumes": [
							"database_data:/data",
						],
					}
				},
				"volumes": {
					"database_data": {}
				},
			},
		};
		
		YamlTest::assertYaml(xml, result, variables);
	}
	
	
}